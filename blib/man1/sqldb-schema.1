.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQLDB-SCHEMA 1"
.TH SQLDB-SCHEMA 1 "2012-06-15" "perl v5.12.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
sqldb\-schema \- generate a SQL::DB schema from a database
.SH "VERSION"
.IX Header "VERSION"
0.191.0. Development release.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  sqldb\-schema [options] DATABASE PACKAGE [OUTFILE]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBsqldb-schema\fR is a helper for building \s-1SQL::DB\s0\-based Perl
applications. Given a Data Source Name (dbi:) or SQLite filename and a
Perl package class, \fBsqldb-schema\fR will connect to the database and
output a Perl module that can be used by SQL::DB::Schema at runtime.
 Output is printed to \s-1STDOUT\s0 if \s-1OUTFILE\s0 is not specified.
.PP
Use of \fBsqldb-schema\fR is not necessary for \s-1SQL::DB\s0 applications,
but could be an important optimisation to minimize database calls in
applications with more than a trivial number of tables. This is more
interesting for remote database engines such as PostgreSQL with a
higher query latency than for local database engines such as SQLite.
.PP
The standard usage scenario is as follows. After any schema change to
your database you run \fBsqldb-schema\fR and save the output as a Perl
module:
.PP
.Vb 3
\&    $ sqldb\-schema dbi:Pg:dbname=myapp MyApp::Pg lib/MyApp/Pg.pm
\&    Username: mylogin
\&    Password: ********
.Ve
.PP
Then in your application code you set the \s-1SQL::DB\s0 object \*(L"schema\*(R"
attribute to the schema package, but without the trailing ::Driver.
\&\s-1SQL::DB\s0 will automatically add the missing '::Driver' part based on the
\&'dsn' value. This way your constructor doesn't need to change if you
are running the same code against different database types.
.PP
.Vb 2
\&    package MyApp;
\&    use SQL::DB;
\&
\&    my $db = SQL::DB\->new(
\&        dsn    => \*(Aqdbi:Pg:dbname=myapp\*(Aq,
\&        dbuser => \*(Aqusername\*(Aq,
\&        dbpass => \*(Aq******\*(Aq,
\&        schema => \*(AqMyApp\*(Aq, # ::Pg will automatically be appended
\&    );
.Ve
.PP
Now any calls to \*(L"urow\*(R" or \*(L"srow\*(R" on the \f(CW$db\fR object will not need to
query the database to know the table structure.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-username, \-u" 4
.IX Item "--username, -u"
The username to connect to the database with. You will be prompted if
this is not given (for any driver other than SQLite).
.IP "\-\-password, \-p" 4
.IX Item "--password, -p"
The password to connect to the database with. For security reasons it
is not recommended to use this option. You will be prompted if this is
not given (for any driver other than SQLite).
.IP "\-\-dbschema, \-d" 4
.IX Item "--dbschema, -d"
The name of the database schema (if any) to narrow down the result of
the \s-1DBI\s0 \*(L"table_info\*(R" call. For PostgreSQL databases this defaults to
\&'public'. For SQLite databases this defaults to 'main'. Setting it to
\&'%' will retrieve the tables from all schemas.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1SQL::DB\s0, SQL::DB::Schema, App::sqldb_schema
.SH "AUTHOR"
.IX Header "AUTHOR"
Mark Lawrence <nomad@null.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2011 Mark Lawrence <nomad@null.net>
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.
